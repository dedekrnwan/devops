---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    namespace: development-monitoring
    name: packetbeat-pvc
    labels:
        app: packetbeat
        
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
    namespace: development-monitoring
    name: packetbeat
    labels:
        app: packetbeat
data:
    packetbeat.yml: |-
        setup.dashboard.enabled: true
        setup.template.enabled: true

        setup.template.settings:
            index.number_of_shards: 2
        
        packetbeat.interfaces.device: anu

        packetbeat.protocols:
        -   type: dns
            ports: [53]
            include_authorities: true
            include_additionals:true

        -   type: http
            ports: [80,8000,8080,9200]

        -   type: mysql
            ports: [3306]
        
        -   type: redis
            ports: [3306]
            
        -   type: tls
            ports: [443, 993, 995, 5223, 8443, 8883, 9243]

        packetbeat.flows:
            timeout: 30s
            period: 10s

        processors:
            -   add_cloud_metadata:
            -   add_kubernetes_metada:
                    host: ${HOST_NAME}
                    indexers:
                    -   ip_port:
                    matchers:
                    -   field_format:
                            format: '%{[ip]}:${[port]}'
        # cloud.ath: elastic:${ELASTIC_PASSWORD}
        # cloud.id: ${CLOUD_ID}

        output.elasticsearch:
            hosts: ["${ELASTICSEARCH_HOST}"]
            username: ${ELASTICSEARCH_USERNAME}
            password: ${ELASTICSEARCH_PASSWORD}

        setup.kibana:
            host: ${KIBANA_HOST} 
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
    name: packetbeat
    namespace: development-monitoring
    labels:
        app: packetbeat
spec:
    selector:
        matchLabels:
            app: packetbeat
    template:
        metadata:
            labels:
                app: packetbeat
        spec:
            serviceAccountName: packetbeat
            terminationGracePeriodSeconds: 30
            hostNetwork: true
            containers:
            -   name: packetbeat
                image: docker.elastic.co/beats/packetbeat:7.5.1
                imagePullPolicy: Always
                args: [
                    "-c", "/etc/packetbeat.yml",
                    "-e"
                ]
                securityContext:
                    runAsUser: 0
                    capabilities:
                        add:
                        -   NET_ADMIN
                env:
                -   name: ELASTICSEARCH_HOST
                    value: http://elasticsearch.development-monitoring:9200
                -   name: ELASTICSEARCH_USERNAME
                    value: elastic
                -   name: ELASTICSEARCH_PASSWORD
                    valueFrom:
                        secretKeyRef:
                            name: elasticsearch-pw-elastic
                            key: password
                -   name: KIBANA_HOST
                    value: http://kibana.development-monitoring:5601
                volumeMounts:
                -   name: config
                    mountPath: /etc/packetbeat.yml
                    readOnly: true
                    subPath: packetbeat.yml
                -   name: packetbeat-persistent-storage
                    mountPath: /usr/share/packetbeat/data
            volumes:
            -   name: config
                configMap:
                    defaultMode: 0600
                    name: packetbeat-config
            -   name: packetbeat-persistent-storage
                persistentVolumeClaim:
                    claimName: packetbeat-pvc
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
    name: packetbeat
subjects:
-   kind: ServiceAccount
    name: packetbeat
    namespace: development-monitoring
roleRef:
    kind: ClusterRole
    name: packetbeat
    apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
    name: packetbeat
    labels:
        app: packetbeat
rules:
-   apiGroups: [""]
    resources:
    - nodes
    - namespaces
    - events
    - pods
    verbs: ["get", "list", "watch"]
-   apiGroups: ["extensions"]
    resources:
    - replicasets
    verbs: ["get", "list", "watch"]
-   apiGroups: ["apps"]
    resources:
    - statefulsets
    - deployments
    verbs: ["get", "list", "watch"] 