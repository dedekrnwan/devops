---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    namespace: staging-monitoring
    name: metricbeat-pvc
    labels:
        app: metricbeat
        
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
---
apiVersion: v1
kind: ConfigMap
metadata: 
    namespace: staging-monitoring
    name: metricbeat-config
    labels:
        app: metricbeat
data:
    metricbeat.yml: |-
        
        # Configure modules
        metricbeat.modules:
            -   module: system
                period: ${PERIOD}
                metricsets: ["cpu", "load", "memory", "network", "process", "process_summary", "core", "diskio", "socket"]
                processes: ['.*']
                process.include_top_n:
                    by_cpu: 5      # include top 5 processes by CPU
                    by_memory: 5   # include top 5 processes by memory

            -   module: system
                period: ${PERIOD}
                metricsets:  ["filesystem", "fsstat"]
                processors:
                - drop_event.when.regexp:
                    system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib)($|/)'

            -   module: docker
                period: ${PERIOD}
                hosts: ["unix:///var/run/docker.sock"]
                metricsets: ["container", "cpu", "diskio", "healthcheck", "info", "memory", "network"]

            -   module: kubernetes
                period: ${PERIOD}
                host: ${NODE_NAME}
                hosts: ["localhost:10255"]
                metricsets: ["node", "system", "pod", "container", "volume"]

            -   module: kubernetes
                period: ${PERIOD}
                host: ${NODE_NAME}
                metricsets: ["state_node", "state_deployment", "state_replicaset", "state_pod", "state_container"]
                hosts: ["kube-state-metrics.kube-system:8080"]

        # Connection to ElasticSearch
        output.elasticsearch:
            hosts: ['${ELASTICSEARCH_HOST}']
            username: ${ELASTICSEARCH_USERNAME}
            password: ${ELASTICSEARCH_PASSWORD}

        # Connection to Kibana to import pre-existing dashboards
        setup.kibana:
            host: '${KIBANA_HOST}'

        # Import pre-existing dashboards
        setup.dashboards.enabled: true

        # Configure indice lifecycle
        setup.ilm:
            policy_file: /etc/indice-lifecycle.json
---
apiVersion: v1 
kind: ConfigMap
metadata: 
    namespace: staging-monitoring
    name: metricbeat-indice-lifecycle
    labels:
        app: metricbeat
data:
    indice-lifecycle.json: |-
        {
            "policy": {
                "phases": {
                    "hot": {
                        "actions": {
                            "rollover": {
                                "max_size": "5GB" ,
                                "max_age": "1d"
                            }
                        }
                    },
                    "delete": {
                        "min_age": "7d",
                        "actions": {
                        "delete": {}
                        }
                    }
                }
            }
        }
---
apiVersion: apps/v1
kind: DaemonSet
metadata: 
    namespace: staging-monitoring
    name: metricbeat
    labels:
        app: metricbeat
spec:
    selector:
        matchLabels:
            app: metricbeat
    template:
        metadata:
            labels: 
                app: metricbeat
        spec:
            serviceAccountName: metricbeat
            terminationGracePeriodSeconds: 30
            hostNetwork: true
            dnsPolicy: ClusterFirstWithHostNet
            containers:
            -   name: metricbeat
                image: docker.elastic.co/beats/metricbeat:7.5.1
                args: [
                    "-c","/etc/metricbeat.yml",
                    "-e",
                    "-system.hostfs=/hostfs"
                ]
                env:
                -   name: ELASTICSEARCH_HOST
                    value: http://elasticsearch.staging-monitoring:9200
                -   name: ELASTICSEARCH_USERNAME
                    value: elastic
                -   name: ELASTICSEARCH_PASSWORD
                    valueFrom:
                        secretKeyRef:
                            name: elasticsearch-pw-elastic
                            key: password
                -   name: KIBANA_HOST
                    value: http://kibana.staging-monitoring:5601
                -   name: NODE_NAME
                    valueFrom:
                        fieldRef:
                            fieldPath: spec.nodeName
                -   name: PERIOD
                    value: 10s
                securityContext:
                    runAsUser: 0
                volumeMounts:
                -   name: config
                    mountPath: /etc/metricbeat.yml
                    readOnly: true
                    subPath: metricbeat.yml
                -   name: metricbeat-indice-lifecycle
                    mountPath: /etc/indice-lifecycle.json
                    readOnly: true
                    subPath: indice-lifecycle.json
                -   name: dockersock
                    mountPath: /var/run/docker.sock
                -   name: proc
                    mountPath: /hostfs/proc
                    readOnly: true
                -   name: cgroup
                    mountPath: /hostfs/sys/fs/cgroup
                    readOnly: true
                -   name: metricbeat-persistent-storage
                    mountPath: /var/lib/metricbeat/data
            volumes:
            -   name: proc
                hostPath:
                    path: /proc
            -   name: cgroup
                hostPath:
                    path: /sys/fs/cgroup
            -   name: dockersock
                hostPath:
                    path: /var/run/docker.sock
            -   name: config
                configMap:
                    defaultMode: 0600
                    name: metricbeat-config
            -   name: metricbeat-indice-lifecycle
                configMap:
                    defaultMode: 0600
                    name: metricbeat-indice-lifecycle
            -   name: metricbeat-persistent-storage
                persistentVolumeClaim:
                    claimName: metricbeat-pvc
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
    name: metricbeat
subjects:
-   kind: ServiceAccount
    name: metricbeat
    namespace: staging-monitoring
roleRef:
    kind: ClusterRole
    name: metricbeat
    apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
    name: metricbeat
    labels:
        app: metricbeat
rules:
-   apiGroups: [""]
    resources:
    - nodes
    - namespaces
    - events
    - pods
    verbs: ["get", "list", "watch"]
-   apiGroups: ["extensions"]
    resources:
    - replicasets
    verbs: ["get", "list", "watch"]
-   apiGroups: ["apps"]
    resources:
    - statefulsets
    - deployments
    verbs: ["get", "list", "watch"]
-   apiGroups:
    - ""
    resources:
    - nodes/stats
    verbs:
    - get
---
apiVersion: v1
kind: ServiceAccount
metadata:
    namespace: staging-monitoring
    name: metricbeat
    labels:
        app: metricbeat
---