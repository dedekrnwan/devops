---
apiVersion: v1
kind: ConfigMap
metadata:  
    namespace: staging-monitoring
    name: elasticsearch-config
    labels:
        app: elasticsearch
data:
    elasticsearch.yml: |-
        ## Default Elasticsearch configuration from Elasticsearch base image.
        ## https://github.com/elastic/elasticsearch/blob/master/distribution/docker/src/docker/config/elasticsearch.yml
        #
        cluster.name: elasticsearch
        node.name: elasticsearch
        network.host: 0.0.0.0

        ## Use single node discovery in order to disable production mode and avoid bootstrap checks
        ## see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
        #
        discovery.type: single-node

        ## X-Pack settings
        ## see https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-xpack.html
        #
        # xpack.license.self_generated.type: trial
        xpack.monitoring.enabled: true
        xpack.monitoring.collection.enabled: true
        # http.cors.enabled: true
        # http.cors.allow-origin: *
        xpack.security.enabled: true
        xpack.security.audit.enabled: true
        # xpack.security.transport.ssl.enabled: true
        # xpack.security.transport.ssl.keystore.type: PKCS12
        # xpack.security.transport.ssl.verification_mode: certificate
        # xpack.security.transport.ssl.keystore.path: elastic-certificates.p12
        # xpack.security.transport.ssl.truststore.path: elastic-certificates.p12
        # xpack.security.transport.ssl.truststore.type: PKCS12

        bootstrap.memory_lock: true
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    namespace: staging-monitoring
    name: elasticsearch-pvc
    labels:
        app: elasticsearch
        
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  namespace: staging-monitoring
  name: elasticsearch
  labels:
    app: elasticsearch
spec:
  ports:
  - port: 9200
    name: client
  - port: 9300
    name: transport
  selector:
    app: elasticsearch
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: staging-monitoring
  name: elasticsearch
  labels:
    app: elasticsearch
spec:
  serviceName: "elasticsearch"
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      initContainers:
      - name: volume-mount-hack
        image: busybox
        command: ["sh", "-c", "chown -R 1000:0 /usr/share/elasticsearch/data"]
        volumeMounts:
          - name: persistent-storage
            mountPath: /usr/share/elasticsearch/data
      - name: sysctl-config
        image: busybox
        securityContext:
          privileged: true
        command: ["sh", "-c", "sysctl -w  vm.max_map_count=262144"]                
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.5.0
        # resources:
        #   limits:
        #       cpu: 1000m
        #       memory: 2000Mi
        #   requests:
        #       cpu: 500m
        #       memory: 1000Mi
        # env:
        # - name: "ES_JAVA_OPTS"
        #   value: "-Xms1024m -Xmx1024m"
        ports:
        - containerPort: 9200
          name: client
        - containerPort: 9300
          name: transport
        volumeMounts:
        - name: persistent-storage
          mountPath: /usr/share/elasticsearch/data
        - name: config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          readOnly: true
          subPath: elasticsearch.yml
      volumes:
      - name: config
        configMap:
          name: elasticsearch-config
      - name: persistent-storage
        persistentVolumeClaim:
          claimName: elasticsearch-pvc
---